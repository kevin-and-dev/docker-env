version: '3.9'
services:

    mongodb:
      image: mongo:4.4
      container_name: mongodb
      hostname: mongodb
      volumes:
        - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
        - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
        - ./.docker/mongodb/data/db/:/data/db/
        - ./.docker/mongodb/data/log/:/var/log/mongodb/
        - ./.docker/mongodb/.dbshell:/home/mongodb/.dbshell
      env_file:
        - .env
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      ports:
        - "27017:27017"
      # networks:
      #   - backend
      command: ["-f", "/etc/mongod.conf"]


    mongo-express:
      image: mongo-express:0.54
      container_name: mongo-express
      hostname: mongo-express
      ports:
        - 8081:8081
      volumes:
        - ./.docker/mongo-express/docker-entrypoint.sh:/docker-entrypoint.sh
      env_file:
        - .env
      environment:
        ME_CONFIG_MONGODB_SERVER: mongodb
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
        ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      # networks:
      #   - backend
      depends_on:
        - mongodb


    nodejs:
      image: node:14-slim
      container_name: nodejs
      hostname: nodejs
      build: .docker/nodejs/
      env_file:
        - .env
      ports:
        - "80:8080"
      volumes:
        - .:/usr/node/app
        - node_modules:/usr/node/app/node_modules
      # networks:
      #   - backend
      #   - frontend
      depends_on:
        - mongodb


# networks:
#   frontend:
#   backend:
    # driver: bridge


volumes:
  node_modules:

# rm -dfr .docker/mongodb/data/db/ ./node_modules ./yarn.lock; mkdir .docker/mongodb/data/log .docker/mongodb/data/db; docker compose rm -fsv && docker compose up --build --force-recreate --renew-anon-volumes
